/**
* Copyright 2019 H-UI [ @author Mac.Manon @email fastapp@139.com ]
* Licensed under the Apache License, Version 2.0 (the "License"); you may not use
* this file except in compliance with the License.  You may obtain a copy of the
* License at
*
* http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software distributed
* under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
* CONDITIONS OF ANY KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations under the License.
*
*/

<import name="flex-row" src="../basic/c_flex_row"></import>
<import name="flex-col" src="../basic/c_flex_col"></import>
<import name="modal" src="../feedback/c_modal"></import>
<import name="b" src="../text/c_tag_b"></import>
<template>
    <div class="table {{borderless ? '' : (bordered ? 'table-border' : '')}}">
        <modal if="{{id !== undefined}}" id="{{id + '_modal'}}"></modal>
        <flex-row class="{{borderless ? '' : (bordered ? 'tr-border' : 'tr')}}" if="{{data !== undefined}}">
            <flex-col class="th-first {{sm ? 'th-first-sm' : ''}} {{theadType === '' ? '' : 'th-' + theadType}} {{borderless ? '' : (bordered ? 'th-first-border' : '')}}" width="1">
                <b text="#" class="{{theadType === '' ? '' : 'th-' + theadType + '-text'}}"></b>
            </flex-col>
            <block for="{{data.thead}}">
                <flex-col class="th {{sm ? 'th-sm' : ''}} {{theadType === '' ? '' : 'th-' + theadType}} {{borderless ? '' : (bordered ? 'th-border' : '')}}" width="{{$item.width}}">
                    <b text="{{ $t('message.' + $item.key) }}" class="{{theadType === '' ? '' : 'th-' + theadType + '-text'}}"></b>
                </flex-col>
            </block>
        </flex-row>

        <block for="{{compData}}">
            <!--数据概要-->
            <div onclick="handleClick($idx)">
                <flex-row  class="{{borderless ? '' : (bordered ? 'tr-border' : 'tr')}}">
                    <flex-col class="th-first {{sm ? 'th-first-sm' : ''}} {{$item.type === '' ? '' : 'th-' + $item.type}} {{borderless ? '' : (bordered ? 'th-first-border' : '')}}" width="1">
                        <b text="{{$idx + 1}}" class="{{$item.type === '' ? '' : 'th-' + $item.type + '-text'}}"></b>
                    </flex-col>
                    <block for="{{tdData in $item.data}}">
                        <flex-col if="{{tdData.show}}" class="th {{sm ? 'th-sm' : ''}} {{$item.type === '' ? '' : 'th-' + $item.type}} {{borderless ? '' : (bordered ? 'th-border' : '')}}" width="{{tdData.width}}">
                            <text class="{{$item.type === '' ? '' : 'th-' + $item.type + '-text'}}">{{tdData.value}}</text>
                        </flex-col>
                    </block>
                </flex-row>
            </div>

            <!--数据详情-->
            <div class="memo" if="{{$item.open}}" onclick="handleClick($idx)">
                <block for="{{tdData in $item.data}}">
                    <flex-row align="top">
                        <flex-col class="memo-right" width="3">
                            <text class="memo-right-text">{{ $t('message.' + tdData.key) }}:</text>
                        </flex-col>
                        <flex-col class="memo-left" width="9">
                            <text>{{tdData.value}}</text>
                        </flex-col>
                    </flex-row>
                </block>

                <div class="memo-operate">
                    <div if="{{showDelete || showEdit}}" class="memo-operate-left">
                        <div if="{{showDelete}}" onclick="handleDelete($idx)" style="margin-right: 30px;">
                            <text class="icon memo-operate-left-delete">&#xe7b8;</text>
                            <text class="memo-operate-left-delete">{{ $t('message.delete') }}</text>
                        </div>
                        <div if="{{showEdit}}" onclick="handleEdit($idx)">
                            <text class="icon">&#xe793;</text>
                            <text>{{ $t('message.edit') }}</text>
                        </div>
                    </div>
                    <div class="{{showDelete || showEdit ? 'memo-operate-right' : 'memo-operate-center'}}">
                        <text class="icon icon-lg">&#xe70f;</text>
                    </div>
                </div>
            </div>
        </block>

        <slot></slot>
    </div>
</template>

<style lang="less">
    @import '../../../styles/variables.less';

    @font-face {
        font-family: hui;
        src: url('/Common/fonts/hui.ttf');
    }

    .icon {
        font-family: hui;
        &-lg {
            font-size: 46px;
        }
    }

    .table{
        width: 100%;
        flex-direction: column;
        &-border{
            border-bottom-color: @color-border;
            border-bottom-width: 2px;
        }
    }

    .tr{
        border-bottom-color: @color-border;
        border-bottom-width: 2px;
        &-border{
            border-top-color: @color-border;
            border-top-width: 2px;
        }
    }

    .th{
        justify-content:center;
        padding: 20px 5px;
        &-border {
            border-right-width: 1px;
            border-color: @color-border;
        }
        &-sm{
            justify-content:center;
            padding: 10px 5px;
        }
        &-first{
            justify-content:center;
            padding: 20px 0;
            &-border {
                border-left-width: 1px;
                border-right-width: 1px;
                border-color: @color-border;
            }
            &-sm{
                justify-content:center;
                padding: 10px 0;
            }
        }
        &-dark{
            background-color: #222529;
            &-text{
                color: #ffffff;
            }
            &-striped{
                background-color: #2c2f33;
                &-text{
                    color: #ffffff;
                }
            }
        }
        &-light{
            background-color: #e9ecef;
            &-text{
                color: #4a5056;
            }
        }
        &-striped{
            background-color: #f3f3f3;
            &-text{
                color: #323539;
            }
        }
        &-default{
            background-color: #ffffff;
            &-text{
                color: #222529;
            }
        }
        &-primary{
            background-color: @color-primary;
            &-text{
                color: #ffffff;
            }
        }
        &-success{
            background-color: @color-success;
            &-text{
                color: #ffffff;
            }
        }
        &-warning{
            background-color: @color-warning;
            &-text{
                color: #ffffff;
            }
        }
        &-danger{
            background-color: @color-danger;
            &-text{
                color: #ffffff;
            }
        }
        &-info{
            background-color: @color-info;
            &-text{
                color: #ffffff;
            }
        }
    }

    .memo{
        width: 100%;
        flex-direction: column;
        border-width: 2px;
        border-radius: 8px;
        border-color: @color-border;
        margin: 10px 0;
        background-color: @color-light;
        &-left{
            padding: 20px 5px;
        }
        &-right{
            justify-content: flex-end;
            padding: 20px 5px;
            &-text{
                font-weight: bolder;
            }
        }
        &-operate{
            justify-content: space-between;
            margin: 0 33px;
            padding: 20px 0;
            border-top-color: @color-border;
            border-top-width: 0.5px;
            &-left{
                width: 342px;
                &-delete{
                    color: @color-danger;
                }
            }
            &-right{
                width: 114px;
                justify-content: flex-end;
            }
            &-center{
                width: 100%;
                justify-content: center;
            }
        }
    }
</style>

<script>
    export default {
        props: {
            id: {},
            data: {},
            showEdit: {
                default: false
            },
            showDelete: {
                default: false
            },
            current: {
                default: -1
            },
            accordion: {
                default: false
            },
            dark: {//暗黑模式
                default: false
            },
            thead:{//head头
                default: '' //支持light和dark样式
            },
            striped: {//条纹状表格
                default: false
            },
            bordered: {//表格边框
                default: false
            },
            borderless:{//无边框
                default: false
            },
            sm: {//紧缩表格
                default: false
            }
        },

        data() {
            return {
                compData: [],
                active: [Number(this.current)],
                deleteIndex: -1,
                theadType: ''
            }
        },

        onInit() {
            //监控模态
            this.$on(this.id + '_modal_dispatchEvt',this.dispatchEvt)
            this.refresh()
        },

        dispatchEvt() {
            console.info(this.deleteIndex)
            //删除操作被确认，通知上级可以执行远程删除等操作了
            this.$dispatch(this.id + '_dispatchDeleteEvt', {
                value: this.deleteIndex
            })
        },

        refresh() {
            var arr = []
            if(this.data !== undefined){
                var thead = this.data.thead
                var tbody = this.data.tbody

                if(tbody !== undefined){
                    for (var  i = 0; i < tbody.length; i++) {
                        var itemData = []
                        for(let v in tbody[i]) {
                            var key = v
                            var value = tbody[i][v]
                            var show = false
                            var width = 0

                            if(thead !== undefined){
                                for(var j=0; j< thead.length; j++){
                                    if(thead[j].key === v){
                                        show = true
                                        width = thead[j].width
                                    }
                                }
                            }

                            itemData.push({
                                key: key,
                                value: value,
                                show: show,
                                width: width
                            })
                        }

                        //暗黑模式
                        var type = this.dark ? 'dark' : ''

                        if(this.striped){//条纹状表格
                            if(type === 'dark'){//暗黑模式
                                if(i % 2 === 0){//奇数行
                                    type = 'dark-striped'
                                }else{//偶数行
                                    type = 'dark'
                                }
                            }else{//普通模式
                                if(i % 2 === 0){//奇数行
                                    type = 'striped'
                                }else{//偶数行
                                    type = ''
                                }
                            }
                        }

                        //语义状态化
                        if(this.data.type !== undefined){
                            if(this.data.type[i] !== undefined){
                                if(this.data.type[i] !== '') {
                                    type = this.data.type[i]
                                }
                            }
                        }

                        //表头样式
                        this.theadType = this.thead === '' ? '' : this.thead
                        if(this.dark){
                            this.theadType = 'dark'
                        }

                        var item = {
                            open: this.active.indexOf(i) !== -1,
                            type: type,
                            data: itemData
                        }

                        arr.push(item)
                    }
                }
            }
            this.compData = arr
        },

        handleClick(index){
            if(this.accordion){//手风琴模式
                if(this.active.indexOf(index) !== -1) {
                    this.active = []
                }else{
                    var arr = []
                    arr.push(index)
                    this.active = arr
                }
            }else{//非手风琴模式
                if(this.active.indexOf(index) !== -1) {
                    for(var i=0;i<this.active.length;i++){
                        if(index === this.active[i]){
                            this.active.splice(i, 1)
                            break
                        }
                    }
                }else{
                    this.active.push(index)
                }
            }

            this.refresh()
        },

        handleDelete(index, evt){
            evt.stopPropagation()

            this.deleteIndex = index

            this.$child(this.id + '_modal').showModal({
                text: '您确定删除这条数据吗?',
                title: '删除确认',
                id: this.id + '_modal'
            });
        },
        handleEdit(index, evt){
            evt.stopPropagation()
            this.$dispatch(this.id + '_dispatchEditEvt', {
                value: index
            })
        }
    };
</script>